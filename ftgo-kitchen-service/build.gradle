buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:$springDependencyManagementPluginVersion"
        // if using Stub Runner (consumer side) only remove this dependency
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:$springCloudContractDependenciesVersion"
    }
}

apply plugin: "io.spring.dependency-management"
apply plugin: 'spring-cloud-contract'
apply plugin: IntegrationTestsPlugin
apply plugin: FtgoJSONSchema2PojoPlugin

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:$springCloudContractDependenciesVersion"
    }
}

contracts {
    contractsDslDir = new File("../ftgo-kitchen-service-contracts/src/main/resources/contracts")
    packageWithBaseClasses = 'net.chrisrichardson.ftgo.kitchenservice.contract'
    generatedTestSourcesDir = project.file("${project.buildDir}/generated-integration-test-sources/contracts")
    sourceSet = "integrationTest"
}

sourceSets {
    integrationTest {
        java {
            srcDir project.file("${project.buildDir}/generated-integration-test-sources/contracts")
        }
    }
}

compileTestGroovy.enabled=false

apply plugin: FtgoServicePlugin


dependencies {

    ftgoApiSpecification project(":ftgo-restaurant-service-api-spec")

    compile "io.eventuate.tram.core:eventuate-tram-spring-jdbc-kafka"
    compile "io.eventuate.tram.core:eventuate-tram-spring-events"
    compile "io.eventuate.tram.core:eventuate-tram-spring-messaging"
    compile "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-orchestration-simple-dsl"

    compile project(":common-swagger")
    compile project(":ftgo-common-jpa")
    compile project(":ftgo-kitchen-service-api")
    compile project(":ftgo-restaurant-service-api")
    compile "io.eventuate.tram.core:eventuate-tram-aggregate-domain-events"

    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile 'javax.el:javax.el-api:2.2.5'

    compile('org.apache.kafka:kafka-clients:2.3.0') {
        force = true
    }

    testCompile "io.eventuate.util:eventuate-util-test"
    testCompile "io.eventuate.tram.core:eventuate-tram-test-util"

    testCompile "io.eventuate.tram.sagas:eventuate-tram-sagas-spring-in-memory"
    testCompile "io.eventuate.tram.core:eventuate-tram-spring-in-memory"
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "com.jayway.restassured:rest-assured:$restAssuredVersion"
    testCompile "com.jayway.jsonpath:json-path:2.3.0"
    testCompile "io.eventuate.tram.core:eventuate-tram-spring-testing-support-cloud-contract"

    testCompile 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
}

ftgoJsonSchema2Pojo {

    ftgoRestaurantService {
        source = files("${ftgoApiSpecsDir}/ftgo-restaurant-service-api-spec/messages")
        targetPackage = "net.chrisrichardson.ftgo.restaurantservice.events"
        includeAdditionalProperties = false
        generateBuilders = true
        useLongIntegers = true
    }

}
